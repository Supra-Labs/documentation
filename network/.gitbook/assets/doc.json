{"openapi":"3.0.3","info":{"title":"Supra RPC Node","description":"0.4.0\ntag:v6.3.0\ncommit_hash:c96652d0\nbuild_time:2024-09-30 14:50:41 +00:00\nbuild_env:rustc 1.81.0 (eeb90cda1 2024-09-04),stable-x86_64-unknown-linux-gnu","contact":{"name":"Supra Labs","url":"https://supra.com"},"version":"c96652d09d0e96e8a653ab6762c875b5f7b8f11f"},"servers":[{"url":"https://rpc-testnet.supra.com","description":"RPC For Supra Scan and Faucet"},{"url":"https://rpc-testnet1.supra.com/","description":"RPC For nodeops group1"},{"url":"https://rpc-testnet2.supra.com/","description":"RPC For nodeops group2"},{"url":"https://rpc-testnet3.supra.com/","description":"RPC For nodeops group3"},{"url":"https://rpc-testnet4.supra.com/","description":"RPC For nodeops group4"},{"url":"https://rpc-testnet5.supra.com/","description":"RPC For nodeops group5"},{"url":"http://localhost:27000/","description":"LocalNet"}],"paths":{"/rpc/v1/accounts/{address}":{"get":{"tags":["Accounts"],"summary":"Fetch account info","description":"contains auth key & sequence number for the account","operationId":"account_information","parameters":[{"name":"address","in":"path","description":"address of the account to lookup","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"account information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountInfo"}}}}}}},"/rpc/v1/accounts/{address}/coin_transactions":{"get":{"tags":["Accounts"],"summary":"List of finalized coin withdraw/deposit transactions relevant to the move account. Return max 100 transactions per request.","description":"It includes both transactions sent from and received by the account.\n","operationId":"coin_transactions","parameters":[{"name":"count","in":"query","description":"Maximum number of items to return. Default is 20.","required":false,"schema":{"type":"integer","nullable":true,"minimum":0},"style":"form"},{"name":"start","in":"query","description":"The cursor that the search should start from. The cursor for a given transaction can be derived by adding\nits index (where indexes start from zero) in the block in which it became finalized to the timestamp of the\nblock.\n\nDuring a paginated query, the cursor returned in the previous page should be used as the starting cursor of the next page.\n\nIf provided, return `:count` of transactions starting from this cursor in ascending order.\nIf not provided, return `:count` of most recent transactions in descending order.","required":false,"schema":{"type":"integer","format":"uint64","nullable":true,"minimum":0},"style":"form"},{"name":"address","in":"path","description":"Hex encoded move address for the account","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of transactions sent from and received by the move account.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountStatement"}}}}}}},"/rpc/v1/accounts/{address}/modules":{"get":{"tags":["Accounts"],"summary":"Get account modules by address","operationId":"move_modules","parameters":[{"name":"count","in":"query","description":"Maximum number of items to return. Default is 20.","required":false,"schema":{"type":"integer","nullable":true,"minimum":0},"style":"form"},{"name":"start","in":"query","description":"Cursor specifying where to start for pagination\nuse the curser returned by the API","required":false,"schema":{"type":"string","nullable":true},"style":"form"},{"name":"address","in":"path","description":"account address to lookup","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"account module list","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MoveList"}}}}}}},"/rpc/v1/accounts/{address}/modules/{module_name}":{"get":{"tags":["Accounts"],"operationId":"move_module","parameters":[{"name":"address","in":"path","description":"account address to lookup","required":true,"schema":{"type":"string"}},{"name":"module_name","in":"path","description":"Move module identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"View account module by Move module name","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MoveValueResponse"}}}}}}},"/rpc/v1/accounts/{address}/resources":{"get":{"tags":["Accounts"],"summary":"Get account resources by address","operationId":"move_resources","parameters":[{"name":"count","in":"query","description":"Maximum number of items to return. Default is 20.","required":false,"schema":{"type":"integer","nullable":true,"minimum":0},"style":"form"},{"name":"start","in":"query","description":"Cursor specifying where to start for pagination\nuse the curser returned by the API","required":false,"schema":{"type":"string","nullable":true},"style":"form"},{"name":"address","in":"path","description":"account address to lookup","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"account resource list","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MoveList"}}}}}}},"/rpc/v1/accounts/{address}/resources/{struct_tag}":{"get":{"tags":["Accounts"],"summary":"View account resource by Move type","operationId":"move_resource","parameters":[{"name":"address","in":"path","description":"account address to lookup","required":true,"schema":{"type":"string"}},{"name":"struct_tag","in":"path","description":"Move struct tag","required":true,"schema":{"type":"string"},"example":"0x1::coin::CoinStore<0x1::supra_coin::SupraCoin>"}],"responses":{"200":{"description":"View account resource by Move Struct type","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MoveValueResponse"}}}}}}},"/rpc/v1/accounts/{address}/transactions":{"get":{"tags":["Accounts"],"summary":"List of finalized transactions sent by the move account. Return max 100 transactions per request.","operationId":"statement","parameters":[{"name":"count","in":"query","description":"Maximum number of items to return. Default is 20.","required":false,"schema":{"type":"integer","nullable":true,"minimum":0},"style":"form"},{"name":"start","in":"query","description":"Starting sequence number.\nIf provided, return `:count` of transactions starting from this sequence number in ascending order.\nIf not provided, return `:count` of most recent transactions in descending order.","required":false,"schema":{"type":"integer","format":"uint64","nullable":true,"minimum":0},"style":"form"},{"name":"address","in":"path","description":"Hex encoded move address for the account","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of transactions from the move account.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountStatement"}}}}}}},"/rpc/v1/block":{"get":{"tags":["Block"],"summary":"Get the header of the most recently finalized block.","operationId":"latest_block","responses":{"200":{"description":"Returns the header of the most recently finalized block.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/BlockHeaderInfo"}],"nullable":true}}}}}}},"/rpc/v1/block/height/{height}":{"get":{"tags":["Block"],"summary":"Get information about the block that has been finalized at the given height.","operationId":"block_by_height","parameters":[{"name":"height","in":"path","description":"Block height","required":true,"schema":{"type":"integer","format":"uint64","minimum":0}},{"name":"with_finalized_transactions","in":"query","description":"If true, returns all transactions that were finalized by this block in the order that they\nwere executed.","required":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Information about the block that has been finalized at the given height.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/Block"}],"nullable":true}}}}}}},"/rpc/v1/block/{block_hash}":{"get":{"tags":["Block"],"summary":"Get the header of the block with the given hash.","operationId":"block_header_info","parameters":[{"name":"block_hash","in":"path","description":"Hex encoded block hash","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The header of the block with the given hash.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/BlockHeaderInfo"}],"nullable":true}}}}}}},"/rpc/v1/block/{block_hash}/transactions":{"get":{"tags":["Block"],"summary":"Get a list containing the hashes of the transactions that were finalized in the block with","description":"the given hash in the order that they were executed.","operationId":"txs_by_block","parameters":[{"name":"block_hash","in":"path","description":"Hex encoded block hash","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of the hashes of the transactions contained in the block.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Hash"}}}}}}}},"/rpc/v1/consensus/block/height/{height}":{"get":{"tags":["Consensus"],"summary":"Get a block at the requested height possibly together with all the batches of the transactions","description":"that were finalized in the block in the order that they were executed.","operationId":"consensus_block","parameters":[{"name":"height","in":"path","description":"Block height","required":true,"schema":{"type":"integer","format":"uint64","minimum":0}},{"name":"with_batches","in":"query","description":"If true, returns all batches of transactions that were finalized by this block in the order that they\nwere executed.","required":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Consensus block with certificates and possibly block batches finalized in this block.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/ConsensusBlock"}],"nullable":true}}}}}}},"/rpc/v1/events/{event_type}":{"get":{"tags":["Events"],"summary":"Get events by type.","operationId":"events_by_type","parameters":[{"name":"start","in":"query","description":"Starting block height (inclusive).","required":true,"schema":{"type":"integer","format":"uint64","minimum":0},"style":"form"},{"name":"end","in":"query","description":"Ending block height (exclusive). The max range is 10 blocks, a.k.a. end - start <= 10.","required":true,"schema":{"type":"integer","format":"uint64","minimum":0},"style":"form"},{"name":"event_type","in":"path","description":"Canonical string representation of event type. E.g. 0000000000000000000000000000000a::module_name::type_name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of Events contained in blocks","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Events"}}}}}}},"/rpc/v1/tables/{table_handle}/item":{"post":{"tags":["Tables"],"summary":"Get table items by key.","description":"# Example of body\n```json\n{\n\"key_type\": \"u64\",\n\"value_type\": \"0x1::multisig_voting::Proposal<0x1::governance_proposal::GovernanceProposal>\",\n\"key\": \"12\"\n}\n```\n```json\n{\n\"key_type\": \"u64\",\n\"value_type\": \"0x1::string::String\",\n\"key\": \"42\"\n}\n```","operationId":"table_item_by_key","parameters":[{"name":"table_handle","in":"path","description":"Table handle to lookup. Should be retrieved using account resources API.","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Request containing item key and value types and item key itself","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TableItemRequest"}}},"required":true},"responses":{"200":{"description":"Item of the table","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MoveValue"}}}}}}},"/rpc/v1/transactions/chain_id":{"get":{"tags":["Transactions"],"summary":"Fetch chain id","operationId":"chain_id","responses":{"200":{"description":"current chain id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChainId"}}}}}}},"/rpc/v1/transactions/estimate_gas_price":{"get":{"tags":["Transactions"],"summary":"Fetch current recommended gas price","operationId":"estimate_gas_price","responses":{"200":{"description":"current maximum and average gas price","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GasPriceRes"}}}}}}},"/rpc/v1/transactions/simulate":{"post":{"tags":["Transactions"],"summary":"Simulate a transaction in scope of RPC node.","operationId":"simulate_txn","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SupraTransaction"}}},"required":true},"responses":{"200":{"description":"Simulation is ready","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionInfo"}}}}}}},"/rpc/v1/transactions/submit":{"post":{"tags":["Transactions"],"summary":"Submit a transaction to Supra.","operationId":"submit_txn","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SupraTransaction"}}},"required":true},"responses":{"200":{"description":"transaction submitted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Hash"}}}}}}},"/rpc/v1/transactions/{hash}":{"get":{"tags":["Transactions"],"summary":"Get information about a transaction by its hash.","operationId":"transaction_by_hash","parameters":[{"name":"hash","in":"path","description":"Hash of the transaction to lookup","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Transaction data of the given transaction hash","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/TransactionInfo"}],"nullable":true}}}}}}},"/rpc/v1/view":{"post":{"tags":["View"],"summary":"Execute view function of a module","description":"# Example\n```json\n{\n\"function\": \"0x1::timestamp::now_microseconds\",\n\"type_arguments\": [],\n\"arguments\": []\n}\n```","operationId":"view_function","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ViewRequest"}}},"required":true},"responses":{"200":{"description":"Result of view function","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/MoveValueResponse"}],"nullable":true}}}}}}},"/rpc/v1/wallet/faucet/transactions/{hash}":{"get":{"tags":["Faucet"],"summary":"Get information about a faucet transaction by its hash.","operationId":"faucet_transaction_by_hash","parameters":[{"name":"hash","in":"path","description":"Hash of the faucet transaction to lookup","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Faucet transaction data of the given transaction hash","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/TransactionInfo"}],"nullable":true}}}}}}},"/rpc/v1/wallet/faucet/{address}":{"get":{"tags":["Faucet"],"summary":"Faucet endpoint","description":"funds account with [FUND_AMOUNT] coins","operationId":"faucet","parameters":[{"name":"address","in":"path","description":"account address to fund","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of associated transactions created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FaucetStatus"}}}}}}}},"components":{"schemas":{"AccountAddress":{"type":"string","description":"Hex encoded address for the account"},"AccountInfo":{"type":"object","description":"Datatype that holds the sequence number and account authentication key.","required":["sequence_number","authentication_key"],"properties":{"sequence_number":{"type":"integer","format":"uint64","minimum":0},"authentication_key":{"$ref":"#/components/schemas/Hash"}}},"AccountStatement":{"type":"object","required":["record"],"properties":{"record":{"type":"array","items":{"$ref":"#/components/schemas/TransactionInfo"}}}},"BatchHeader":{"type":"object","description":"Batch metadata.","required":["author","epoch_id","protocol","timestamp","aggregated_gas_price"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"epoch_id":{"$ref":"#/components/schemas/EpochId"},"protocol":{"$ref":"#/components/schemas/SmrTransactionProtocol"},"timestamp":{"$ref":"#/components/schemas/SmrTimestamp"},"aggregated_gas_price":{"type":"integer","format":"uint64","description":"Aggregated gas unit price of the enclosed transactions.","minimum":0}}},"Block":{"type":"object","description":"The API representation of a Supra block.","required":["header"],"properties":{"header":{"$ref":"#/components/schemas/BlockHeaderInfo"},"transactions":{"type":"array","items":{"$ref":"#/components/schemas/TransactionInfo"},"description":"The API representations of all transactions contained in the block, in the order that\nthey were executed.","nullable":true}}},"BlockHeader":{"type":"object","description":"Block metadata.","required":["author","height","parent","timestamp","view"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"height":{"type":"integer","format":"uint64","description":"Number of blocks before this block in the chain (including the genesis block).","minimum":0},"parent":{"$ref":"#/components/schemas/Hash"},"timestamp":{"$ref":"#/components/schemas/SmrTimestamp"},"view":{"$ref":"#/components/schemas/View"}}},"BlockHeaderInfo":{"type":"object","description":"Metadata about a Supra block.","required":["author","hash","height","parent","timestamp","view"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"hash":{"$ref":"#/components/schemas/Hash"},"height":{"type":"integer","format":"uint64","description":"Number of blocks before this block in the chain (including the genesis block).","minimum":0},"parent":{"$ref":"#/components/schemas/Hash"},"timestamp":{"$ref":"#/components/schemas/SmrTimestamp"},"view":{"$ref":"#/components/schemas/View"}}},"BlockInfo":{"type":"object","description":"Metadata of a block including its digest. This type is primarily used to improve readability.\n","required":["hash","header"],"properties":{"hash":{"$ref":"#/components/schemas/Hash"},"header":{"$ref":"#/components/schemas/BlockHeader"}}},"BlockVoteInfo":{"type":"object","description":"Metadata of a Moonshot consensus vote.\n","required":["block","kind"],"properties":{"block":{"$ref":"#/components/schemas/BlockInfo"},"kind":{"$ref":"#/components/schemas/VoteType"}}},"Certificate":{"type":"object","required":["certifying_committee","data","kind","signature","voters"],"properties":{"certifying_committee":{"$ref":"#/components/schemas/Hash"},"data":{"type":"object","description":"The data from which `signature` is derived."},"kind":{"$ref":"#/components/schemas/CertificateThresholdType"},"signature":{"type":"object","description":"A signature on the [CertificateSignatureData] transformation of `data`."},"voters":{"type":"array","items":{"type":"boolean"},"description":"Identifies the nodes whose signatures were used to construct `signature`.\nEach index corresponds to an index in the vector of public keys of the\nparticipants in the corresponding committee, with its value being set\nto `true` if the participant's signature was included in `signature`."}}},"CertificateThresholdType":{"type":"string","enum":["Validity","Quorum","Unanimous"]},"CertifiedBlock":{"type":"object","description":"An [SmrBlock] certified by an [SmrQC].\n","required":["block","qc"],"properties":{"block":{"$ref":"#/components/schemas/SmrBlock"},"qc":{"$ref":"#/components/schemas/SmrQC"}}},"ChainId":{"type":"integer","format":"uint8"},"ConsensusBlock":{"type":"object","description":"The API representation of a Supra Certified Consensus block.","required":["block","batches"],"properties":{"block":{"$ref":"#/components/schemas/CertifiedBlock"},"batches":{"type":"object","description":"The API representations of all batches of transactions\nthat were finalized by this block in the order that they were executed."}}},"EpochId":{"type":"object","description":"Unique identifier for a single epoch across multiple runs of the protocol.\n","required":["chain_id","epoch"],"properties":{"chain_id":{"type":"integer","format":"uint8","description":"Unique identifier for this instance of the SMR.","minimum":0},"epoch":{"type":"integer","format":"uint64","description":"Identifier of the epoch within the context of `chain_id`.","minimum":0}}},"Event":{"type":"object","required":["guid","sequence_number","type","data"],"properties":{"guid":{"type":"string","description":"The globally unique identifier of this event stream."},"sequence_number":{"type":"integer","format":"uint64","minimum":0},"type":{"type":"string","description":"The `MoveType` of the event"},"data":{"description":"The JSON representation of the event"}}},"Events":{"type":"object","required":["data"],"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Event"}}}},"FaucetStatus":{"oneOf":[{"type":"object","required":["Accepted"],"properties":{"Accepted":{"$ref":"#/components/schemas/Hash"}}},{"type":"string","enum":["TryLater"]}],"description":"Faucet may immediately return a hash of a funding tx,\nor, when all minter accounts are busy, reject the request."},"GasPriceRes":{"type":"object","required":["mean_gas_price","max_gas_price"],"properties":{"mean_gas_price":{"type":"integer","format":"uint64","minimum":0},"max_gas_price":{"type":"integer","format":"uint64","minimum":0}}},"Hash":{"type":"string","format":"binary","description":"Represents a hash digest (32 bytes)."},"Identity":{"type":"string","format":"binary","description":"Represents abstract identity in the application layer."},"MoveList":{"oneOf":[{"type":"object","required":["Resources"],"properties":{"Resources":{"type":"object"}}},{"type":"object","required":["Modules"],"properties":{"Modules":{"type":"object"}}}]},"MoveTransactionOutput":{"type":"object","description":"The execution output of a Move transaction.","required":["gas_used","events","vm_status"],"properties":{"gas_used":{"type":"integer","format":"uint64","description":"The gas used by the transaction.","minimum":0},"events":{"type":"array","items":{"$ref":"#/components/schemas/Event"},"description":"The events emitted by the transaction in human-readable form."},"vm_status":{"type":"string","description":"A message summarizing the execution result produced by the MoveVM."}}},"MoveValue":{"oneOf":[{"type":"object","required":["U8"],"properties":{"U8":{"type":"integer","format":"uint8","description":"A u8 Move type","minimum":0}}},{"type":"object","required":["U16"],"properties":{"U16":{"type":"integer","format":"uint16","minimum":0}}},{"type":"object","required":["U32"],"properties":{"U32":{"type":"integer","format":"uint32","minimum":0}}},{"type":"object","required":["U64"],"properties":{"U64":{"type":"string","description":"A string encoded U64."}}},{"type":"object","required":["U128"],"properties":{"U128":{"type":"string","description":"A string encoded U128."}}},{"type":"object","required":["U256"],"properties":{"U256":{"type":"string","description":"A string encoded U256."}}},{"type":"object","required":["Bool"],"properties":{"Bool":{"type":"boolean","description":"A bool Move type"}}},{"type":"object","required":["Address"],"properties":{"Address":{"type":"string","description":"The address of an account\n\nThis is represented in a string as a 64 character hex string, sometimes\nshortened by stripping leading 0s, and adding a 0x."}}},{"type":"object","required":["Vector"],"properties":{"Vector":{"type":"array","items":{"type":"string"},"description":"A vector Move type.  May have any other [`MoveValue`] nested inside it"}}},{"type":"object","required":["Bytes"],"properties":{"Bytes":{"type":"string","description":"All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with `0x` and fulfilled with\ntwo hex digits per byte.\n\nUnlike the `Address` type, HexEncodedBytes will not trim any zeros."}}},{"type":"object","required":["Struct"],"properties":{"Struct":{"type":"object","description":"This is a JSON representation of some data within an account resource. More specifically,\nit is a map of strings to arbitrary JSON values / objects, where the keys are top level\nfields within the given resource.\n\nTo clarify, you might query for 0x1::account::Account and see the example data.\n\nMove `bool` type value is serialized into `boolean`.\n\nMove `u8`, `u16` and `u32` type value is serialized into `integer`.\n\nMove `u64`, `u128` and `u256` type value is serialized into `string`.\n\nMove `address` type value (32 byte Supra account address) is serialized into a HexEncodedBytes string.\nFor example:\n- `0x1`\n- `0x1668f6be25668c1a17cd8caf6b8d2f25`\n\nMove `vector` type value is serialized into `array`, except `vector<u8>` which is serialized into a\nHexEncodedBytes string with `0x` prefix.\nFor example:\n- `vector<u64>{255, 255}` => `[\\\"255\\\", \\\"255\\\"]`\n- `vector<u8>{255, 255}` => `0xffff`\n\nMove `struct` type value is serialized into `object` that looks like this (except some Move stdlib types, see the following section):\n```json\n{\nfield1_name: field1_value,\nfield2_name: field2_value,\n......\n}\n```\n\nFor example:\n`{ \\\"created\\\": \\\"0xa550c18\\\", \\\"role_id\\\": \\\"0\\\" }`\n\n**Special serialization for Move stdlib types**:\n- [0x1::string::String]\nis serialized into `string`. For example, struct value `0x1::string::String{bytes: b\\\"Hello World!\\\"}`\nis serialized as `\\\"Hello World!\\\"` in JSON.\n"}}},{"type":"object","required":["String"],"properties":{"String":{"type":"string","description":"A string Move type"}}}]},"MoveValueResponse":{"type":"object","description":"Datatype for representing the MoveValue","required":["result"],"properties":{"result":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/MoveValue"}],"nullable":true}}}},"SignedSmrTransaction":{"type":"object","description":"Defines internal transactions(DKG and Oracle) coupled with signer data.","required":["signer_data","transaction"],"properties":{"signer_data":{"type":"object","description":"Signer data on the transaction."},"transaction":{"type":"object","description":"Unsigned internal transaction."}}},"SignedTransaction":{"type":"object","required":["raw_txn","authenticator"],"properties":{"raw_txn":{"type":"object","description":"The raw transaction"},"authenticator":{"type":"object","description":"Public key and signature to authenticate"}}},"SmrBlock":{"type":"object","description":"A Supra Moonshot block.\n","required":["digest","header","payload"],"properties":{"digest":{"$ref":"#/components/schemas/Hash"},"header":{"$ref":"#/components/schemas/BlockHeader"},"payload":{"type":"object","description":"Payload."}}},"SmrDkgCommitteeType":{"oneOf":[{"type":"string","enum":["Smr"]},{"type":"object","required":["OracleCommittee"],"properties":{"OracleCommittee":{"type":"integer","format":"uint64","minimum":0}}}],"description":"Defines supported committee types for which distributed key generation can be conducted."},"SmrQC":{"type":"object","required":["certificate"],"properties":{"certificate":{"$ref":"#/components/schemas/Certificate"}}},"SmrTimestamp":{"type":"object","description":"Timestamps used by SMR-related types. Respects the bounds of [chrono::DateTime].","required":["timestamp"],"properties":{"timestamp":{"type":"integer","format":"uint64","description":"The timestamp as measured in the number of microseconds since the unix epoch.","minimum":0}}},"SmrTransactionHeader":{"type":"object","description":"A Supra transaction header. Contains properties common to all types of Supra transactions.","required":["chain_id","expiration_timestamp","sender","sequence_number","gas_unit_price","max_gas_amount"],"properties":{"chain_id":{"type":"integer","format":"uint8","description":"The unique identifier for the instance of the Supra chain that this transaction should\nbe executed upon.","minimum":0},"expiration_timestamp":{"$ref":"#/components/schemas/SmrTimestamp"},"sender":{"$ref":"#/components/schemas/AccountAddress"},"sequence_number":{"type":"integer","format":"uint64","description":"The sequence number of the sender's account in the target VM.","minimum":0},"gas_unit_price":{"type":"integer","format":"uint64","description":"The amount of Supra that the sender is willing to pay per unit of gas.","minimum":0},"max_gas_amount":{"type":"integer","format":"uint64","description":"The maximum amount of gas that the sender is willing to spend.","minimum":0}}},"SmrTransactionProtocol":{"oneOf":[{"type":"string","enum":["Move"]},{"type":"object","required":["Dkg"],"properties":{"Dkg":{"$ref":"#/components/schemas/SmrDkgCommitteeType"}}},{"type":"object","required":["Oracle"],"properties":{"Oracle":{"type":"integer","format":"uint64","minimum":0}}}]},"SupraTransaction":{"oneOf":[{"type":"object","required":["Smr"],"properties":{"Smr":{"$ref":"#/components/schemas/SignedSmrTransaction"}}},{"type":"object","required":["Move"],"properties":{"Move":{"$ref":"#/components/schemas/SignedTransaction"}}}]},"TableItemRequest":{"type":"object","description":"Describes body of the Table item request by item key.","required":["key_type","value_type","key"],"properties":{"key_type":{"type":"string","description":"Move Type describing key."},"value_type":{"type":"string","description":"Move Type describing the pointing value type."},"key":{"type":"string","description":"Key of the item being queried."}}},"TransactionBlockInfo":{"type":"object","description":"Metadata about the block that finalized a particular [SmrTransaction].","required":["hash","height","timestamp"],"properties":{"hash":{"$ref":"#/components/schemas/Hash"},"height":{"type":"integer","format":"uint64","description":"The height of the related block.","minimum":0},"timestamp":{"$ref":"#/components/schemas/SmrTimestamp"}}},"TransactionInfo":{"type":"object","description":"Information about a Supra transaction.","required":["authenticator","hash","header","payload","status"],"properties":{"authenticator":{"type":"object","description":"The cryptographic material that was submitted with the transaction, according to its type."},"block_header":{"allOf":[{"$ref":"#/components/schemas/TransactionBlockInfo"}],"nullable":true},"hash":{"$ref":"#/components/schemas/Hash"},"header":{"$ref":"#/components/schemas/SmrTransactionHeader"},"payload":{"type":"object","description":"The deserialized payload of the transaction according to its type."},"output":{"allOf":[{"$ref":"#/components/schemas/TransactionOutput"}],"nullable":true},"status":{"$ref":"#/components/schemas/TxExecutionStatus"}}},"TransactionOutput":{"oneOf":[{"type":"object","required":["Dkg"],"properties":{"Dkg":{"$ref":"#/components/schemas/TxExecutionStatus"}}},{"type":"string","enum":["Empty"]},{"type":"object","required":["Move"],"properties":{"Move":{"$ref":"#/components/schemas/MoveTransactionOutput"}}},{"type":"object","required":["Oracle"],"properties":{"Oracle":{"$ref":"#/components/schemas/TxExecutionStatus"}}}],"description":"[TransactionOutput] with all fields in human-readable format."},"TxExecutionStatus":{"type":"string","description":"The execution summary status for a Supra transaction.","enum":["Success","Fail","Invalid","PendingAfterExecution","Pending"]},"VMStatus":{"oneOf":[{"type":"string","description":"The VM status corresponding to an EXECUTED status code","enum":["Executed"]},{"type":"object","required":["Error"],"properties":{"Error":{"type":"object","description":"Indicates an error from the VM, e.g. OUT_OF_GAS, INVALID_AUTH_KEY, RET_TYPE_MISMATCH_ERROR\netc.\nThe code will neither EXECUTED nor ABORTED","required":["status_code"],"properties":{"status_code":{"type":"integer","format":"uint16","minimum":0},"sub_status":{"type":"integer","format":"uint64","nullable":true,"minimum":0},"message":{"type":"string","nullable":true}}}}},{"type":"object","required":["MoveAbort"],"properties":{"MoveAbort":{"type":"array","items":{"type":"object"},"description":"Indicates an `abort` from inside Move code. Contains the location of the abort and the code","maxItems":2,"minItems":2}}},{"type":"object","required":["ExecutionFailure"],"properties":{"ExecutionFailure":{"type":"object","description":"Indicates an failure from inside Move code, where the VM could not continue execution, e.g.\ndividing by zero or a missing resource","required":["status_code","location","function","code_offset"],"properties":{"status_code":{"type":"integer","format":"uint16","minimum":0},"sub_status":{"type":"integer","format":"uint64","nullable":true,"minimum":0},"location":{"type":"string"},"function":{"type":"integer","format":"uint16","minimum":0},"code_offset":{"type":"integer","format":"uint16","minimum":0},"message":{"type":"string","nullable":true}}}}}]},"View":{"type":"object","description":"Unique identifier for a single view across multiple runs of the protocol.\n","required":["epoch_id","round"],"properties":{"epoch_id":{"$ref":"#/components/schemas/EpochId"},"round":{"type":"integer","format":"uint64","description":"Identifier of the consensus round.","minimum":0}}},"ViewRequest":{"type":"object","required":["function","type_arguments","arguments"],"properties":{"function":{"type":"string","description":"Entry function id is string representation of a entry function defined on-chain.\n\nFormat: `{address}::{module name}::{function name}`\n\nBoth `module name` and `function name` are case-sensitive."},"type_arguments":{"type":"array","items":{"type":"string"},"description":"Vector of Move type tag.\nThe Move type tag string representation as below:\nValues:\n- bool\n- u8\n- u16\n- u32\n- u64\n- u128\n- u256\n- address\n- signer\n- vector: `vector<{non-reference MoveTypeId}>`\n- struct: `{address}::{module_name}::{struct_name}::<{generic types}>`\n\nVector type value examples:\n- `vector<u8>`\n- `vector<vector<u64>>`\n- `vector<0x1::coin::CoinStore<0x1::supra_coin::SupraCoin>>`\n\nStruct type value examples:\n- `0x1::coin::CoinStore<0x1::supra_coin::SupraCoin>\n- `0x1::account::Account`\n\nNote:\n1. Empty chars should be ignored when comparing 2 struct tag ids.\n2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n"},"arguments":{"type":"array","items":{},"description":"Arguments of the function"}}},"VoteType":{"type":"string","description":"The different types of valid vote messages in Moonshot.\n","enum":["Commit","PrepareFallback","PrepareNormal","PrepareOptimistic"]}}},"tags":[{"name":"Accounts","description":"Accounts Api"},{"name":"Faucet","description":"Faucet Api"},{"name":"Transactions","description":"Transactions Api"},{"name":"Block","description":"Block Api"},{"name":"View","description":"View Api"},{"name":"Consensus","description":"Consensus Api"},{"name":"Events","description":"Events Api"},{"name":"Tables","description":"Tables Api"}]}